//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheShop.Client.ShopServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShopServiceReference.IShopService")]
    public interface IShopService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/GetProducts", ReplyAction="http://tempuri.org/IShopService/GetProductsResponse")]
        System.Collections.Generic.List<TheShop.Model.Product> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/GetProducts", ReplyAction="http://tempuri.org/IShopService/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TheShop.Model.Product>> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/AddProduct", ReplyAction="http://tempuri.org/IShopService/AddProductResponse")]
        void AddProduct(TheShop.Model.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/AddProduct", ReplyAction="http://tempuri.org/IShopService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(TheShop.Model.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/RemoveProduct", ReplyAction="http://tempuri.org/IShopService/RemoveProductResponse")]
        void RemoveProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/RemoveProduct", ReplyAction="http://tempuri.org/IShopService/RemoveProductResponse")]
        System.Threading.Tasks.Task RemoveProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/UpdateProduct", ReplyAction="http://tempuri.org/IShopService/UpdateProductResponse")]
        void UpdateProduct(TheShop.Model.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/UpdateProduct", ReplyAction="http://tempuri.org/IShopService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(TheShop.Model.Product product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShopServiceChannel : TheShop.Client.ShopServiceReference.IShopService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShopServiceClient : System.ServiceModel.ClientBase<TheShop.Client.ShopServiceReference.IShopService>, TheShop.Client.ShopServiceReference.IShopService {
        
        public ShopServiceClient() {
        }
        
        public ShopServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShopServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<TheShop.Model.Product> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TheShop.Model.Product>> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public void AddProduct(TheShop.Model.Product product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(TheShop.Model.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void RemoveProduct(int id) {
            base.Channel.RemoveProduct(id);
        }
        
        public System.Threading.Tasks.Task RemoveProductAsync(int id) {
            return base.Channel.RemoveProductAsync(id);
        }
        
        public void UpdateProduct(TheShop.Model.Product product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(TheShop.Model.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
    }
}
